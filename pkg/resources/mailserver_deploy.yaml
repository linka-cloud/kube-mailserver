# Copyright 2022 Linka Cloud  All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ norm "mail" .Domain }}"
  namespace: "{{ .Namespace }}"
spec:
  replicas: {{ .Replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/name: "{{ .Domain }}"
      app.kubernetes.io/instance: "{{ .Domain }}"
      app.kubernetes.io/component: server
      app.kubernetes.io/part-of: "{{ .Domain }}"
      app.kubernetes.io/managed-by: "kube-mailserver"
  template:
    metadata:
      labels:
        app.kubernetes.io/name: "{{ .Domain }}"
        app.kubernetes.io/instance: "{{ .Domain }}"
        app.kubernetes.io/component: server
        app.kubernetes.io/part-of: "{{ .Domain }}"
        app.kubernetes.io/managed-by: "kube-mailserver"
    spec:
      hostname: mail
      restartPolicy: Always
      # {{ if .LDAP.Nameserver }}
      dnsPolicy: None
      dnsConfig:
        nameservers:
        - "{{ .LDAP.Nameserver }}"
      # {{ end }}
      initContainers:
      - name: setup
        image: "{{ .Image }}"
        imagePullPolicy: IfNotPresent
        command:
        - /bin/bash
        args:
        - -c
        - ( listmailuser|grep -s postmaster@${MAIL_DOMAIN} || (echo "Creating Postmaster email $POSTMASTER_EMAIL" && addmailuser $POSTMASTER_EMAIL $POSTMASTER_PASSWORD)) && ( test -f /tmp/docker-mailserver/opendkim/keys/${MAIL_DOMAIN}/mail.private || (echo "Generating DKIM Private Key" && open-dkim) )
        envFrom:
        - secretRef:
            name: "{{ norm "config" .Domain }}"
        - secretRef:
            name: "{{ norm "postmaster" .Domain }}"
        env:
        - name: SSL_TYPE
          value: manual
        - name: SSL_KEY_PATH
          value: /etc/mailserver/ssl/tls.key
        - name: SSL_CERT_PATH
          value: /etc/mailserver/ssl/tls.crt
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          runAsUser: 0
          runAsGroup: 0
          runAsNonRoot: false
          privileged: false
          capabilities:
            add:
            # file permission capabilities
            - CHOWN
            - FOWNER
            - MKNOD
            - SETGID
            - SETUID
            - DAC_OVERRIDE
            # network capabilities
            - NET_ADMIN  # needed for F2B
            - NET_RAW    # needed for F2B
            - NET_BIND_SERVICE
            # miscellaneous  capabilities
            - SYS_CHROOT
            - SYS_PTRACE
            - KILL
            drop: [ ALL ]
        volumeMounts:
        - mountPath: /var/mail
          name: mail-data
          subPath: volumes/maildata
        - mountPath: /var/mail-state
          name: mail-data
          subPath: volumes/mailstate
        - mountPath: /tmp/docker-mailserver
          name: mail-data
          subPath: config
        - mountPath: /etc/mailserver/ssl/
          name: certs
      containers:
      - name: mail
        image: docker.io/mailserver/docker-mailserver:9.1.0
        imagePullPolicy: IfNotPresent
        envFrom:
        - secretRef:
            name: "{{ norm "config" .Domain }}"
        env:
          - name: SSL_TYPE
            value: manual
          - name: SSL_KEY_PATH
            value: /etc/mailserver/ssl/tls.key
          - name: SSL_CERT_PATH
            value: /etc/mailserver/ssl/tls.crt
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          runAsUser: 0
          runAsGroup: 0
          runAsNonRoot: false
          privileged: false
          capabilities:
            add:
            # file permission capabilities
            - CHOWN
            - FOWNER
            - MKNOD
            - SETGID
            - SETUID
            - DAC_OVERRIDE
            # network capabilities
            - NET_ADMIN  # needed for F2B
            - NET_RAW    # needed for F2B
            - NET_BIND_SERVICE
            # miscellaneous  capabilities
            - SYS_CHROOT
            - SYS_PTRACE
            - KILL
            drop: [ALL]
        volumeMounts:
        - mountPath: /var/mail
          name: mail-data
          subPath: volumes/maildata
        - mountPath: /var/mail-state
          name: mail-data
          subPath: volumes/mailstate
        - mountPath: /tmp/docker-mailserver
          name: mail-data
          subPath: config
        - mountPath: /etc/mailserver/ssl/
          name: certs
        ports:
        - name: smtp
          containerPort: 25
          protocol: TCP
        - name: imap
          containerPort: 143
          protocol: TCP
        - name: esmtp-implicit
          containerPort: 465
          protocol: TCP
        - name: esmtp-explicit
          containerPort: 587
        - name: imap-implicit
          containerPort: 993
          protocol: TCP
        - name: pop3
          containerPort: 110
          protocol: TCP
        - name: pop3s
          containerPort: 995
          protocol: TCP
        - name: sieve
          containerPort: 4190
          protocol: TCP
      volumes:
      - name: mail-data
        persistentVolumeClaim:
          claimName: "{{ norm .Domain "data" }}"
      - name: certs
        secret:
          secretName: "{{ norm .Domain "tls" }}"
